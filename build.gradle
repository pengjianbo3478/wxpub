buildscript {
	ext {
		springBootVersion = '1.4.5.RELEASE'
	}
	repositories {
		maven { url 'http://glnexus.365gl.com/repository/maven-public' } 
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: "jacoco"

sourceCompatibility = 1.8
targetCompatibility = 1.8
version=jarVersion()

repositories {
    maven { url 'http://glnexus.365gl.com/repository/maven-public' }
    jcenter()
}

configurations {
 	compile.exclude group:'ch.qos.logback'
}

dependencies {
    runtime 'org.springframework.boot:spring-boot-starter-actuator'
	runtime 'org.springframework.boot:spring-boot-starter-log4j2'
    runtime 'org.springframework.cloud:spring-cloud-starter-sleuth'
    runtime 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
    runtime 'org.apache.commons:commons-pool2:2.4.2'
    runtime 'org.apache.kafka:kafka-clients:0.9.0.1'

	compile 'org.springframework.boot:spring-boot-starter-undertow'
    compile 'org.springframework.cloud:spring-cloud-starter-hystrix'
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
    compile 'io.springfox:springfox-swagger2:2.6.1'
    compile 'io.springfox:springfox-swagger-ui:2.6.1'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.7'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.7'
    
    compile 'org.springframework.data:spring-data-redis:1.8.1.RELEASE'
    compile 'redis.clients:jedis:2.9.0'

    compile 'com.gl365.aliyun.ons.listener:gl365-aliyun-ons-consumer-starter:0.0.1-SNAPSHOT'
    compile 'com.gl365.job:gl365-job-core:0.0.1-SNAPSHOT'
    compile 'org.springframework.cloud:spring-cloud-starter-feign'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
  imports {
    mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR6'
  }
}

def jarVersion() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("UTC"))
}
